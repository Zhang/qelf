#!/usr/bin/env node
'use strict';

const db = require('../app/db');
const userModel = require('../app/models/user');
const _ = require('lodash');
const experiments = require('./experiments');
const co = require('co');
const config = require('../app/config');

if (config.isProd) {
  console.error(new Error('Cannot init dev on prod instance'));
  process.exit(1);
}

function generateUsers(numberOf) {
  const emails = _.map(_.range(numberOf), function(id) {
    return 'test_user' + id + '@gmail.com';
  });

  return _.map(emails, function(email, index) {
    return {
      email: email,
      password: 'test' + index,
      experiments: []
    };
  });
}

var mockUsers = generateUsers(5);
function addAcct(acct) {
  co(function* () {
    try {
      yield experiments.addDefault();
      const user = yield* userModel.add(acct);
      yield userModel.updateExperiments(user.id, experiments.defaultExperimentIds);
    } catch (e) {
      console.error('error adding account', e);
      throw e;
    }
  });
}

db.driver.dropDatabase();
for (var i = 0; i < mockUsers.length; i++) {
  try {
    addAcct(mockUsers[i]);
  } catch (err) {
    console.error(err);
    process.exit(1);
  }
}
